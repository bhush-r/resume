.about__container {
  grid-template-columns: 3fr 9fr;
  column-gap: 1.875rem;
}

/* This rule keeps your image circular and centered */
.about__img {
  width: 165px;
  height: 165px;
  border-radius: 50%;
  object-fit: cover;
  justify-self: center;
}

.about__data {
  position: relative; /* Added for the ::before pseudo-element positioning */
  padding: 1.875rem;
  background-color: var(--container-color);
  box-shadow: var(--shadow);
  border-radius: var(--border-radius);
  grid-template-columns: repeat(2, 1fr);
  column-gap: 1.875rem;
  align-items: flex-start; 
}

.about__data::before {
  content: "";
  width: 0;
  height: 0;
  border-top: 10px solid transparent; 
  border-bottom: 10px solid transparent;
  border-right: 15px solid var(--container-color);
  position: absolute;
  left: -0.93rem;
  top: 20%;
}

.about__description {
  margin-bottom: 1rem;
  text-align: justify;
}

.about__skills {
  row-gap: 1.25rem;
}

.skills__titles {
  display: flex;
  justify-content: space-between;
  margin-bottom: 1rem;
}

.skills__name {
  font-size: var(--normal-font-size);
  font-weight: var(--font-medium);
}

.skills__number {
  line-height: 1.2;
}

.skills__bar,
.skills__percentage {
  height: 7px;
  border-radius: 0.25rem;
}

.skills__bar {
  background-color: #f1f1f1;
}

.skills__percentage {
  display: block;
}

/* --- ✨ NEW ANIMATION CODE STARTS HERE (Fill Bar on Scroll) ✨ --- */
@keyframes fill-bar {
  from {
    width: 0%;
  }
  to {
    /* Target width is set by the inline style in the React component */
    opacity: 1; 
  }
}

/* Set initial state for animation (optional but good practice) */
.skills__percentage {
    opacity: 0; 
}

.android_development {
  background-color: rgb(255, 209, 92);
  width: 85%; /* Setting the final width here, animation handles the transition */
  animation: fill-bar 1.5s ease-out forwards; 
}

.java {
  background-color: rgb(255, 76, 96);
  width: 80%;
  animation: fill-bar 1.5s ease-out forwards;
}
.kotlin {
  background-color: rgb(108, 108, 229); 
  width: 85%;
  animation: fill-bar 1.5s ease-out forwards;
}
.oops {
  background-color: rgb(230, 17, 138);
  width: 85%;
  animation: fill-bar 1.5s ease-out forwards;
}
.python {
  background-color: rgb(108, 108, 229); 
  width: 75%;
  animation: fill-bar 1.5s ease-out forwards;
}

/* Removed redundant fill-bar keyframes from the bottom, kept the core definitions */


@media screen and (max-width: 1024px) {
  .about__container {
    grid-template-columns: 720px;
    justify-content: center;
    row-gap: 1.875rem;
  }

  .about__data::before {
    content: ""; /* Keep content for the arrow */
    border-top: 10px solid var(--container-color); /* Arrow pointing up */
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-bottom: none;
    left: 49%;
    top: -10px; /* Moved up slightly */
    transform: translateX(-50%); /* Centering fix */
  }

  .about__img {
    justify-self: center;
  }

  .about__box {
    flex-direction: column;
    row-gap: .5rem;
    text-align: center;
  }
}

@media screen and (max-width: 768px) {
  .about__container {
    grid-template-columns: 350px;
  }
  .about__data::before {
    left: 47%;
  }
  .about__data {
    grid-template-columns: 1fr;
    row-gap: 1.875rem;
  }
  .about__boxes {
    grid-template-columns: repeat(2, 150px);
    row-gap: 1.5rem;
    justify-content: center;
  }
}

@media screen and (max-width: 576px) {
  .about__container {
    grid-template-columns: 320px;
  }
}

@media screen and (max-width: 350px) {
  .about__container {
    grid-template-columns: 1fr;
  }
  .about__boxes {
    grid-template-columns: 1fr;
  }
}
